<?php 
/*
 * UberAPILib
 *
 * This file was automatically generated by APIMATIC v2.0 ( https://apimatic.io ) on 07/17/2016
 */

namespace UberAPILib\Models;

use JsonSerializable;

/**
 * @todo Write general description for this model
 */
class PriceEstimate implements JsonSerializable {
    /**
     * Unique identifier representing a specific product for a given latitude & longitude. For example, uberX in San Francisco will have a different product_id than uberX in Los Angeles
     * @maps product_id
     * @var string $productId public property
     */
    public $productId;

    /**
     * [ISO 4217](http://en.wikipedia.org/wiki/ISO_4217) currency code.
     * @maps currency_code
     * @var string $currencyCode public property
     */
    public $currencyCode;

    /**
     * Display name of product.
     * @maps display_name
     * @var string $displayName public property
     */
    public $displayName;

    /**
     * Formatted string of estimate in local currency of the start location. Estimate could be a range, a single number (flat rate) or "Metered" for TAXI.
     * @var string $estimate public property
     */
    public $estimate;

    /**
     * Lower bound of the estimated price.
     * @maps low_estimate
     * @var double $lowEstimate public property
     */
    public $lowEstimate;

    /**
     * Upper bound of the estimated price.
     * @maps high_estimate
     * @var double $highEstimate public property
     */
    public $highEstimate;

    /**
     * Expected surge multiplier. Surge is active if surge_multiplier is greater than 1. Price estimate already factors in the surge multiplier.
     * @maps surge_multiplier
     * @var double $surgeMultiplier public property
     */
    public $surgeMultiplier;

    /**
     * Constructor to set initial or default values of member properties
     * @param   string            $productId          Initialization value for the property $this->productId       
     * @param   string            $currencyCode       Initialization value for the property $this->currencyCode    
     * @param   string            $displayName        Initialization value for the property $this->displayName     
     * @param   string            $estimate           Initialization value for the property $this->estimate        
     * @param   double            $lowEstimate        Initialization value for the property $this->lowEstimate     
     * @param   double            $highEstimate       Initialization value for the property $this->highEstimate    
     * @param   double            $surgeMultiplier    Initialization value for the property $this->surgeMultiplier 
     */
    public function __construct()
    {
        if(7 == func_num_args())
        {
            $this->productId        = func_get_arg(0);
            $this->currencyCode     = func_get_arg(1);
            $this->displayName      = func_get_arg(2);
            $this->estimate         = func_get_arg(3);
            $this->lowEstimate      = func_get_arg(4);
            $this->highEstimate     = func_get_arg(5);
            $this->surgeMultiplier  = func_get_arg(6);
        }
    }


    /**
     * Encode this object to JSON
     */
    public function jsonSerialize()
    {
        $json = array();
        $json['product_id']       = $this->productId;
        $json['currency_code']    = $this->currencyCode;
        $json['display_name']     = $this->displayName;
        $json['estimate']         = $this->estimate;
        $json['low_estimate']     = $this->lowEstimate;
        $json['high_estimate']    = $this->highEstimate;
        $json['surge_multiplier'] = $this->surgeMultiplier;

        return $json;
    }
}